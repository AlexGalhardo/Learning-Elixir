# https://hub.docker.com/_/mongo
# https://hub.docker.com/_/mongo-express
# https://hub.docker.com/r/mongoclient/mongoclient
# https://hub.docker.com/_/adminer
# https://hub.docker.com/_/mysql
# https://hub.docker.com/_/postgres

# $ sudo docker-compose up -d
# $ sudo docker-compose ps
# $ sudo docker-compose ps -a
# $ sudo docker-compose restart
# $ sudo docker-compose down
# $ sudo docker-compose down
# $ sudo docker-compose down -v
# $ sudo docker-compose up -d --remove-orphans

# $ sudo docker network ls

# $ sudo docker rm -f CONTAINER_ID
# $ sudo docker rmi -f IMAGE_ID

# $ sudo docker inspect CONTAINER_NAME_OR_ID

# sudo kill -9 `sudo lsof -t -i:3000`
# sudo kill -9 $(sudo lsof -t -i:3000)
# sudo docker system prune
# sudo docker system prune -af
# https://stackoverflow.com/questions/50142049/enospc-no-space-left-on-device-nodejs

version: '3'

services:

  pokemon_api_pg:
    image: postgres
    container_name: pokemon_api_pg
    environment:
      POSTGRES_PASSWORD: "root"
    ports:
      # - "15432:5432"
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql
    networks:
      - pokemon_api_network

  # POSTGRE username: postgres | password: root |server: pokemon_api_pg
  pokemon_api_adminer:
    image: adminer
    container_name: pokemon_api_adminer
    ports:
      - "8080:8080"
    networks:
      - pokemon_api_network

networks:
  pokemon_api_network:
    driver: bridge

volumes:
  postgres-data: null
